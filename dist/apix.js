import w from"../bin/api.js";function c(e){if(e instanceof Uint8Array)return e;let o=typeof e=="string"?e:JSON.stringify(e);return new TextEncoder().encode(o)}var{createRoot:T,release:j,addProto:v,encode:J,decode:U,encodeResolve:l,decodeResolve:u}=await w();function f(e){return T(e)}function a(e,o,t){return JSON.parse(v(e,o,t))}function g(e,o,t){return J(e,o,c(t)).arr().slice(0)}function y(e,o,t){return JSON.parse(U(e,o,t))}var A=({includes:e,authTokens:o})=>({includes:(e??[]).map(t=>new URL(t)),authTokens:o}),P=e=>new Map(e?e.split(";").map(o=>o.split("@",2).reverse()):[]);async function S(e,{includes:o,authTokens:t}){let r=P(t),s=o.slice(0);try{s.unshift(new URL(e))}catch{}for(let n of s){let i=new URL(e,n),p=r.get(i.host),O=p?{Authorization:`Bearer ${p}`}:void 0,d=await fetch(i,{headers:O});if(d.ok)return await d.text()}throw new Error(`'${e}' not found`)}async function m(e,o,t){let r=await S(o,t),s=a(e,o,r),n=await Promise.all((s.dependency??[]).map(i=>m(e,i,t)));return[s,...n.flat()]}var R=new Map,k=e=>btoa(String.fromCharCode.apply(null,[...e]));async function x(e){let o=k(e),t=R.get(o);if(t)return t;let r=h(e);t=f(r.prefix??"type.googleapis.com"),(r.files??[]).map(({name:n,source:i})=>a(t,n,i));let s=A(r);return await Promise.all(r.entries?.map(n=>m(t,n,s))??[]),R.set(o,t),t}function $(e){return l(c(e)).arr().slice(0)}function h(e){return JSON.parse(u(e))}async function z(e,o,t){return g(await x(e),o,t)}async function K(e,o,t){return y(await x(e),o,t)}export{K as decode,h as decodeResolve,z as encode,$ as encodeResolve};
